<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing"">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="imgSmallBarcode.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAL4AAAA/CAYAAABemHLgAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAArqSURBVHhelYtRimAxDMPm/peenY/VI4gYpwJBY7s/f/z+F3wDeethbjeh3YbeO+cILYe52YRr
        jnC9LfiGtLPmNQf6tEu9czTO0860f98dC0HeepjbTWi3offOOULLYW424ZojXG8LviHtrHnNgT7tUu8c
        jfO0M+3fd8dCkLce5nYT2m3ovXOO0HKYm0245gjX24JvSDtrXnOgT7vUO0fjPO1M+/fdsRDkrYe53YR2
        G3rvnCO0HOZmE645wvW24BvSzprXHOjTLvXO0ThPO9P+fXcsBHnrYW43od2G3jvnCC2HudmEa45wvS34
        hrSz5jUH+rRLvXM0ztPOtH/fHQtB3nqY201ot6H3zjlCy2FuNuGaI1xvC74h7ax5zYE+7VLvHI3ztDPt
        33fHQpC3HuZ2E9pt6L1zjtBymJtNuOYI19uCb0g7a15zoE+71DtH4zztTPv33bEQ5K2Hud2Edht675wj
        tBzmZhOuOcL1tuAb0s6a1xzo0y71ztE4TzvT/n13LAR562FuN6Hdht475wgth7nZhGuOcL0t+Ia0s+Y1
        B/q0S71zNM7TzrR/3x0LQd56mNtNaLeh9845QsthbjbhmiNcbwu+Ie2sec2BPu1S7xyN87Qz7d93x0KQ
        tx7mdhPabei9c47QcpibTbjmCNfbgm9IO2tec6BPu9Q7R+M87Uz7992xEOSth7ndhHYbeu+cI7Qc5mYT
        rjnC9bbgG9LOmtcc6NMu9c7ROE870/59dywEeethbjeh3YbeO+cILYe52YRrjnC9LfiGtLPmNQf6tEu9
        czTO0860f98dC0HeepjbTWi3offOOULLYW424ZojXG8LviHtrHnNgT7tUu8cjfO0M+3fd8dCkLce5nYT
        2m3ovXOO0HKYm0245gjX24JvSDtrXnOgT7vUO0fjPO1M+/fdsRDkrYe53YR2G3rvnCO0HOZmE645wvW2
        4BvSzprXHOjTLvXO0ThPO9P+fXcsBHnrYW43od2G3jvnCC2HudmEa45wvS34hrSz5jUH+rRLvXM0ztPO
        tH/fHQtB3nqY201ot6H3zjlCy2FuNuGaI1xvC74h7ax5zYE+7VLvHI3ztDPt33fHQpC3HuZ2E9pt6L1z
        jtBymJtNuOYI19uCb0g7a15zoE+71DtH4zztTPv33bEQ5K2Hud2Edht675wjtBzmZhOuOcL1tuAb0s6a
        1xzo0y71ztE4TzvT/n13LAR562FuN6Hdht475wgth7nZhGuOcL0t+Ia0s+Y1B/q0S71zNM7TzrR/3x0L
        Qd56mNtNaLeh9845QsthbjbhmiNcbwu+Ie2sec2BPu1S7xyN87Qz7d93x0KQtx7mdhPabei9c47Qcpib
        TbjmCNfbgm9IO2tec6BPu9Q7R+M87Uz7992xEOSth7ndhHYbeu+cI7Qc5mYTrjnC9bbgG9LOmtcc6NMu
        9c7ROE870/59dywEeethbjeh3YbeO+cILYe52YRrjnC9LfiGtLPmNQf6tEu9czTO0860f98dC0Heepjb
        TWi3offOOULLYW424ZojXG8LviHtrHnNgT7tUu8cjfO0M+3fd8dCkLce5nYT2m3ovXOO0HKYm0245gjX
        24JvSDtrXnOgT7vUO0fjPO1M+/fdsRDkrYe53YR2G3rvnCO0HOZmE645wvW24BvSzprXHOjTLvXO0ThP
        O9P+fXcsBHnrYW43od2G3jvnCC2HudmEa45wvS34hrSz5jUH+rRLvXM0ztPOtH/fHQtB3nqY201ot6H3
        zjlCy2FuNuGaI1xvC74h7ax5zYE+7VLvHI3ztDPt33fHQpC3HuZ2E9pt6L1zjtBymJtNuOYI19uCb0g7
        a15zoE+71DtH4zztTPv33bEQ5K2Hud2Edht675wjtBzmZhOuOcL1tuAb0s6a1xzo0y71ztE4TzvT/n13
        LAR562FuN6Hdht475wgth7nZhGuOcL0t+Ia0s+Y1B/q0S71zNM7TzrR/3x0LQd56mNtNaLeh9845Qsth
        bjbhmiNcbwu+Ie2sec2BPu1S7xyN87Qz7d93x0KQtx7mdhPabei9c47QcpibTbjmCNfbgm9IO2tec6BP
        u9Q7R+M87Uz7992xEOSth7ndhHYbeu+cI7Qc5mYTrjnC9bbgG9LOmtcc6NMu9c7ROE870/59dywEeeth
        bjeh3YbeO+cILYe52YRrjnC9LfiGtLPmNQf6tEu9czTO0860f98dC0HeepjbTWi3offOOULLYW424Zoj
        XG8LviHtrHnNgT7tUu8cjfO0M+3fd8dCkLce5nYT2m3ovXOO0HKYm0245gjX24JvSDtrXnOgT7vUO0fj
        PO1M+/fdsRDkrYe53YR2G3rvnCO0HOZmE645wvW24BvSzprXHOjTLvXO0ThPO9P+fXcsBHnrYW43od2G
        3jvnCC2HudmEa45wvS34hrSz5jUH+rRLvXM0ztPOtH/fHQtB3nqY201ot6H3zjlCy2FuNuGaI1xvC74h
        7ax5zYE+7VLvHI3ztDPt33fHQpC3HuZ2E9pt6L1zjtBymJtNuOYI19uCb0g7a15zoE+71DtH4zztTPv3
        3bEQ5K2Hud2Edht675wjtBzmZhOuOcL1tuAb0s6a1xzo0y71ztE4TzvT/n13LAR562FuN6Hdht475wgt
        h7nZhGuOcL0t+Ia0s+Y1B/q0S71zNM7TzrR/3x0LQd56mNtNaLeh9845QsthbjbhmiNcbwu+Ie2sec2B
        Pu1S7xyN87Qz7d93x0KQtx7mdhPabei9c47QcpibTbjmCNfbgm9IO2tec6BPu9Q7R+M87Uz7992xEOSt
        h7ndhHYbeu+cI7Qc5mYTrjnC9bbgG9LOmtcc6NMu9c7ROE870/59dywEeethbjeh3YbeO+cILYe52YRr
        jnC9LfiGtLPmNQf6tEu9czTO0860f98dC0HeepjbTWi3offOOULLYW424ZojXG8LviHtrHnNgT7tUu8c
        jfO0M+3fd8dCkLce5nYT2m3ovXOO0HKYm0245gjX24JvSDtrXnOgT7vUO0fjPO1M+/fdsRDkrYe53YR2
        G3rvnCO0HOZmE645wvW24BvSzprXHOjTLvXO0ThPO9P+fXcsBHnrYW43od2G3jvnCC2HudmEa45wvS34
        hrSz5jUH+rRLvXM0ztPOtH/fHQtB3nqY201ot6H3zjlCy2FuNuGaI1xvC74h7ax5zYE+7VLvHI3ztDPt
        33fHQpC3HuZ2E9pt6L1zjtBymJtNuOYI19uCb0g7a15zoE+71DtH4zztTPv33bEQ5K2Hud2Edht675wj
        tBzmZhOuOcL1tuAb0s6a1xzo0y71ztE4TzvT/n13LAR562FuN6Hdht475wgth7nZhGuOcL0t+Ia0s+Y1
        B/q0S71zNM7TzrR/3x0LQd56mNtNaLeh9845QsthbjbhmiNcbwu+Ie2sec2BPu1S7xyN87Qz7d93x0KQ
        tx7mdhPabei9c47QcpibTbjmCNfbgm9IO2tec6BPu9Q7R+M87Uz7992xEOSth7ndhHYbeu+cI7Qc5mYT
        rjnC9bbgG9LOmtcc6NMu9c7ROE870/59dywEeethbjeh3YbeO+cILYe52YRrjnC9LfiGtLPmNQf6tEu9
        czTO0860f98dC0HeepjbTWi3offOOULLYW424ZojXG8LviHtrHnNgT7tUu8cjfO0M+3fd8dCkLce5nYT
        2m3ovXOO0HKYm0245gjX24JvSDtrXnOgT7vUO0fjPO1M+/f3/vn9B2Uff+CMScY2AAAAAElFTkSuQmCC
</value>
  </data>
</root>